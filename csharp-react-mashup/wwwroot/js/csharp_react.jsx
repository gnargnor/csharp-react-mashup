var data = [
    { id: 1, author: "Ben Bizzey", text: "Heyyyyyy what it do pal?"},
    { id: 2, author: "Diggy Wiggler", text: "Hey ya chowdahead, get off my properties!"},
    { id: 3, author: "Winkle Burgleton", text: "Heyyyyyy who ya callin chowdahead ya codfish"},
];


var CommentList = React.createClass({
    render: function() {
        //mapping the data array into a generic comment - grabbed from the rendering of the CommentList in the CommentBox component return
        var commentNodes = this.props.data.map(function(comment) {
	        return (
	            <Comment author={comment.author} key={comment.id}>
	                {comment.text}
	            </Comment>
	        );
        });

        return (
            <div className="commentList">
                {commentNodes}
            </div>
        );
    }
});

var CommentForm = React.createClass({

    getInitialState: function() {
        return {author: '', text: ''};
    },

    handleAuthorChange: function(e) {
        this.setState({author: e.target.value});
    },

    handleTextChange: function(e) {
        this.setState({text: e.target.value});
    },

    handleSubmit: function(e) {
        e.preventDefault();
        var author = this.state.author.trim();
        var text = this.state.text.trim();
        if (!text || !author){
            return;
        }
        this.props.onCommentSubmit({author: author, text: text});
        this.setState({author: '', text: ''});
    },

    render: function() {
        return (
            <form className="commentForm" onSubmit={this.handleSubmit}>
                <input type="text" value={this.state.author} onChange={this.handleAuthorChange} placeholder="name plz" />
                <input type="text" value={this.state.text} onChange={this.handleTextChange} placeholder="comment plz" />
                <input type="submit" value="Post" />
                <h1>{this.state.author}</h1>
            </form>
        );
    }
});

//grabs the data being passed in the data property of the ReactDOM render of the CommentBox
var CommentBox = React.createClass({
    loadCommentsFromServer: function() {
        var xhr = new XMLHttpRequest();
        xhr.open('get', this.props.url, true);
        xhr.onload = function() {
            var data = JSON.parse(xhr.responseText);
            this.setState({ data : data });
        }.bind(this);
        xhr.send();
    },

    handleCommentSubmit: function(comment) {
        var data = new FormData();
        data.append('author', comment.author);
        data.append('text', comment.text);

        var xhr = new XMLHttpRequest();
        xhr.open('post', this.props.submitUrl, true);
        xhr.onload = function() {
            this.loadCommentsFromServer();
        }.bind(this);
        xhr.send(data);
    },

    getInitialState: function() {
        return {data: []};
    },

    componentDidMount: function() {
        this.loadCommentsFromServer();
        window.setInterval(this.loadCommentsFromServer, this.props.pollInterval)
    },

    render: function() {
        return (
            <div className="commentBox">
                <h1>Turtles</h1>
                <CommentList data={this.state.data} />
                <CommentForm onCommentSubmit={this.handleCommentSubmit}/>
            </div>
        );
    }
});

var Comment = React.createClass({
    rawMarkup: function() {
        var md = new Remarkable();
        var rawMarkup = md.render(this.props.children.toString());
        return { __html: rawMarkup };
    },

    render: function() {
        return (
            <div className="comment">
                <h2 className="commentAuthor">
                    {this.props.author}
                </h2>
                <span dangerouslySetInnerHTML={this.rawMarkup()} />
            </div>
        );
    }
});

ReactDOM.render(
    //grabs the data from the /comments route - this should be generated by a Url.Action call server side ideally.  CommentBox gets this via this.props.url
    <CommentBox url="/comments" submitUrl="/comments/new" pollInterval={2000} />,
    document.getElementById('content')
);


